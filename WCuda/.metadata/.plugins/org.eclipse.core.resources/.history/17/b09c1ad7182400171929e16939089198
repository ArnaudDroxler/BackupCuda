#include <iostream>

#include "Device.h"
#include <curand_kernel.h>
#include "MontecarloMultiGPU.h"
#include "Montecarlo.h"

using std::cout;
using std::endl;


/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Imported	 	*|
 \*-------------------------------------*/


/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Constructeur			*|
 \*-------------------------------------*/

MontecarloMultiGPU::MontecarloMultiGPU(const Grid& grid, double* ptrResult, int nbDartsTotal, float m)
    {
    this->ptrResult = ptrResult;
    this->nbDartsTotal = nbDartsTotal;
    this->m = m;

    // Grid
    	{
    	this->dg = grid.dg;
    	this->db = grid.db;
    	}
    }

MontecarloMultiGPU::~MontecarloMultiGPU(void)
    {
    }

/*--------------------------------------*\
 |*		Methode			*|
 \*-------------------------------------*/

void MontecarloMultiGPU::run()
    {
    uint nbDevice = Device::getDeviceCount();
    uint nbDarts = this->nbDartsTotal / nbDevice;

#pragma omp parallel for reduction(nbDartsUnder, +)
    for (int i = 0; i < nbDevice; i++)
	{
	Device::setDevice(i);
	double result = 0;
	int nbDartsUnder;

	Grid grid(dg, db);

	Montecarlo montecarlo(grid, &result, nbDarts, m);
	montecarlo.run();
	nbDartsUnder = montecarlo.getNbDartsUnder();

	printf("device = %d", i);
	printf("%d", nbDartsUnder);
	}

    }
/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
